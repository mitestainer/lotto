{"version":3,"sources":["components/Button/index.js","components/NumbersArea/index.js","App.js","index.js"],"names":["Button","className","onClick","children","disabled","NumbersArea","id","array","map","num","i","App","useState","nums","setNums","guess","setGuess","mode","setMode","result","setResult","matches","setMatches","maxNum","setMaxNum","useEffect","arr","index","x","push","createCard","filter","includes","length","sort","a","b","orderAndSet","g","splice","removeFromGuess","size","color","shuffle","Math","ceil","random","playGame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bf7e589.chunk.js","sourcesContent":["import './styles.css'\r\n\r\nconst Button = ({ className, onClick, children, disabled }) => <button className={`game-button${className ? ` ${className}` : ''}`} onClick={onClick} disabled={disabled}>{children}</button>\r\n\r\nexport default Button","const NumbersArea = ({ id, array, children }) => {\r\n    const render = () => {\r\n        return (\r\n            array.map((num, i) => {\r\n                return (\r\n                    <div key={`${id}_${i}`}>\r\n                        <span>{num}</span>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div id={id} className=\"numbers-area\">\r\n            {children ? children : render()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NumbersArea","import { useEffect, useState } from 'react';\nimport { GiClover } from 'react-icons/gi'\nimport { FiX, FiRefreshCw, FiPlayCircle } from 'react-icons/fi'\n\nimport Button from './components/Button'\nimport NumbersArea from './components/NumbersArea'\n\nimport './App.css';\n\nfunction App() {\n\tconst [nums, setNums] = useState([])\n\tconst [guess, setGuess] = useState([])\n\tconst [mode, setMode] = useState('')\n\tconst [result, setResult] = useState([])\n\tconst [matches, setMatches] = useState([])\n\tconst [maxNum, setMaxNum] = useState(0)\n\n\tuseEffect(() => {\n\t\tconst createCard = () => {\n\t\t\tlet arr = []\n\t\t\tlet index = 0\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase 'mega':\n\t\t\t\t\tindex = 60\n\t\t\t\t\tbreak\n\t\t\t\tcase 'corner':\n\t\t\t\t\tindex = 80\n\t\t\t\t\tbreak\n\t\t\t\tcase 'e-z':\n\t\t\t\t\tindex = 25\n\t\t\t\t\tbreak\n\t\t\t\tcase 'frenzy':\n\t\t\t\t\tindex = 100\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treturn\n\t\t\t}\n\n\t\t\tfor (let x = 1; x <= index; x++) {\n\t\t\t\tarr.push(x)\n\t\t\t}\n\t\t\tsetNums(arr)\n\t\t}\n\n\t\tsetGuess([])\n\t\tsetResult([])\n\t\tsetMatches([])\n\t\tsetNums([])\n\n\t\tswitch (mode) {\n\t\t\tcase 'mega':\n\t\t\t\tsetMaxNum(6)\n\t\t\t\tbreak\n\t\t\tcase 'corner':\n\t\t\t\tsetMaxNum(5)\n\t\t\t\tbreak\n\t\t\tcase 'e-z':\n\t\t\t\tsetMaxNum(15)\n\t\t\t\tbreak\n\t\t\tcase 'frenzy':\n\t\t\t\tsetMaxNum(20)\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\n\t\tcreateCard()\n\t}, [mode])\n\n\tconst orderAndSet = num => {\n\t\tif (guess.includes(num)) return\n\t\tlet length = 0\n\t\tswitch (mode) {\n\t\t\tcase 'mega':\n\t\t\t\tlength = 6\n\t\t\t\tbreak\n\t\t\tcase 'corner':\n\t\t\t\tlength = 5\n\t\t\t\tbreak\n\t\t\tcase 'e-z':\n\t\t\t\tlength = 15\n\t\t\t\tbreak\n\t\t\tcase 'frenzy':\n\t\t\t\tlength = 20\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\treturn\n\t\t}\n\t\treturn guess.length < length && setGuess([...guess, num].sort((a, b) => a - b))\n\t}\n\n\tconst removeFromGuess = index => {\n\t\tlet arr = [...guess]\n\t\tarr.splice(index, 1)\n\t\tsetGuess(arr)\n\t}\n\n\tconst playGame = mode => {\n\t\tlet length = 0\n\t\tlet index = 0\n\t\tlet arr = []\n\n\t\tswitch (mode) {\n\t\t\tcase 'mega':\n\t\t\t\tlength = 6\n\t\t\t\tindex = 60\n\t\t\t\tbreak\n\t\t\tcase 'corner':\n\t\t\t\tlength = 5\n\t\t\t\tindex = 80\n\t\t\t\tbreak\n\t\t\tcase 'e-z':\n\t\t\t\tlength = 15\n\t\t\t\tindex = 25\n\t\t\t\tbreak\n\t\t\tcase 'frenzy':\n\t\t\t\tlength = 20\n\t\t\t\tindex = 100\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\treturn\n\t\t}\n\n\t\tif (guess.length < length) return\n\n\t\tconst shuffle = () => {\n\t\t\tlet num = Math.ceil(Math.random() * index)\n\t\t\treturn arr.includes(num) ? shuffle() : num\n\t\t}\n\t\twhile (arr.length < length) {\n\t\t\tlet num = shuffle()\n\t\t\tarr.push(num)\n\t\t}\n\n\t\tsetResult(arr.sort((a, b) => a - b))\n\t}\n\n\tuseEffect(() => {\n\t\tsetMatches(guess.filter(num => result.includes(num)))\n\t}, [guess, result])\n\n\tconst reset = () => {\n\t\tsetGuess([])\n\t\tsetResult([])\n\t\tsetMatches([])\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<main>\n\t\t\t\t<section className=\"mode\">\n\t\t\t\t\t<Button className=\"mode-button mega-lotto\" onClick={() => setMode('mega')}>\n\t\t\t\t\t\t<GiClover />Mega Lotto\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button className=\"mode-button corner-lotto\" onClick={() => setMode('corner')}>\n\t\t\t\t\t\t<GiClover />Corner Lotto\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button className=\"mode-button e-z-lotto\" onClick={() => setMode('e-z')}>\n\t\t\t\t\t\t<GiClover />E-Z Lotto\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button className=\"mode-button frenzy-lotto\" onClick={() => setMode('frenzy')}>\n\t\t\t\t\t\t<GiClover />Frenzy Lotto\n\t\t\t\t\t</Button>\n\t\t\t\t</section>\n\t\t\t\t<h1 className={mode ? `${mode}-lotto` : ''}><GiClover /> {mode && `${mode} Lotto`}</h1>\n\t\t\t\t<section className=\"card\">\n\t\t\t\t\t{!mode ? <p>Select a game to play</p> : [<p>Select <strong>{maxNum}</strong> numbers from the following card:</p>,\n\t\t\t\t\t<div className={`game-card ${mode}-card`}>\n\t\t\t\t\t\t{nums.map(num => <div key={num} className={`card-number${guess.includes(num) ? ` number-selected ${mode}-lotto` : ''}`} onClick={() => orderAndSet(num)}><span>{num}</span></div>)}\n\t\t\t\t\t</div>]}\n\t\t\t\t</section>\n\t\t\t\t<section className=\"results\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>Your guess</h2>\n\t\t\t\t\t\t<NumbersArea id=\"guesses\">\n\t\t\t\t\t\t\t{guess.map((g, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div key={`guesses_${i}`}>\n\t\t\t\t\t\t\t\t\t\t<span>{g}</span>\n\t\t\t\t\t\t\t\t\t\t{!result.length && <div onClick={() => removeFromGuess(i)}>\n\t\t\t\t\t\t\t\t\t\t\t<FiX size={12} color=\"tomato\" />\n\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</NumbersArea>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"buttons-wrapper\">\n\t\t\t\t\t\t<Button className={`action-button ${mode}-lotto`} onClick={() => playGame(mode)} disabled={(guess.length !== maxNum || result.length) || (!guess.length && !result.length)}><FiPlayCircle /> Draw!</Button>\n\t\t\t\t\t\t<Button className={`action-button ${mode}-lotto`} onClick={reset} disabled={!result.length}><FiRefreshCw /> Reset</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t{!result.length ? null : <div>\n\t\t\t\t\t\t<h2>Results</h2>\n\t\t\t\t\t\t<NumbersArea id=\"results\" array={result} />\n\t\t\t\t\t</div>}\n\t\t\t\t\t{!result.length ? null : <div>\n\t\t\t\t\t\t<h2>Matches</h2>\n\t\t\t\t\t\t{!result.length ? null : (matches.length === 0 && result.length > 0 ? <p>You didn't match any number</p> : <p>You matched the following numbers:</p>)}\n\t\t\t\t\t\t<NumbersArea id=\"matches\" array={matches} />\n\t\t\t\t\t</div>}\n\t\t\t\t</section>\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}